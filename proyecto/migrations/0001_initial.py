# Generated by Django 4.2.2 on 2024-01-12 17:30

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ahorros',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_recibo', models.IntegerField(blank=True, null=True)),
                ('aportes_anteriores', models.FloatField(blank=True, null=True)),
                ('aportes_pendientes', models.FloatField(blank=True, null=True)),
                ('aportes_por_pagar', models.FloatField(blank=True, null=True)),
                ('aportes_recibidos', models.FloatField(blank=True, null=True)),
                ('saldo_aportes_por_pagar', models.FloatField(blank=True, null=True)),
                ('retiro_de_aportes', models.FloatField(blank=True, null=True)),
                ('total_de_aportes', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ahorros',
            },
        ),
        migrations.CreateModel(
            name='BeneficiariosPersonasNaturales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_completo', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'beneficiarios_personas_naturales',
            },
        ),
        migrations.CreateModel(
            name='Creditos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solicitud_de_credito', models.FloatField(blank=True, null=True)),
                ('fecha_inicio', models.CharField(max_length=50, null=True)),
                ('fecha_final', models.CharField(max_length=50, null=True)),
                ('valor_credito_solicitado', models.FloatField(blank=True, null=True)),
                ('numero_dias_credito', models.IntegerField(blank=True, null=True)),
                ('plazo_meses', models.IntegerField(blank=True, null=True)),
                ('cuota_credito', models.FloatField(blank=True, null=True)),
                ('valor_cuota_total', models.FloatField(blank=True, null=True)),
                ('credito_actual', models.FloatField(blank=True, null=True)),
                ('abono_credito', models.FloatField(blank=True, null=True)),
                ('saldo_credito', models.FloatField(blank=True, null=True)),
                ('interes_credito', models.FloatField(blank=True, null=True)),
                ('interes_anterior', models.FloatField(blank=True, null=True)),
                ('total_interes_a_pagar', models.FloatField(blank=True, null=True)),
                ('intereses_recibidos', models.FloatField(blank=True, null=True)),
                ('saldo_intereses', models.FloatField(blank=True, null=True)),
                ('nueva_afiliacion', models.FloatField(blank=True, null=True)),
                ('total_recibido', models.FloatField(blank=True, null=True)),
                ('nota', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'creditos',
            },
        ),
        migrations.CreateModel(
            name='Departamentos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'departamentos',
            },
        ),
        migrations.CreateModel(
            name='Discapacidades',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'discapacidades',
            },
        ),
        migrations.CreateModel(
            name='EstadosCiviles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'estados_civiles',
            },
        ),
        migrations.CreateModel(
            name='Estudios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'estudios',
            },
        ),
        migrations.CreateModel(
            name='Grupos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'grupos',
            },
        ),
        migrations.CreateModel(
            name='Municipios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=45)),
                ('departamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.departamentos')),
            ],
            options={
                'db_table': 'municipios',
            },
        ),
        migrations.CreateModel(
            name='Ocupaciones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'ocupaciones',
            },
        ),
        migrations.CreateModel(
            name='Paises',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'paises',
            },
        ),
        migrations.CreateModel(
            name='Parentescos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'parentescos',
            },
        ),
        migrations.CreateModel(
            name='Porcentajes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'porcentajes',
            },
        ),
        migrations.CreateModel(
            name='TiposDocumentos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'tipos_documentos',
            },
        ),
        migrations.CreateModel(
            name='TiposGeneros',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'tipos_generos',
            },
        ),
        migrations.CreateModel(
            name='TiposViviendas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'tipos_viviendas',
            },
        ),
        migrations.CreateModel(
            name='PersonasNaturales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_1', models.CharField(max_length=45)),
                ('nombre_2', models.CharField(blank=True, max_length=45, null=True)),
                ('apellido_1', models.CharField(max_length=45)),
                ('apellido_2', models.CharField(blank=True, max_length=45, null=True)),
                ('num_documento', models.IntegerField()),
                ('fecha_expedicion', models.DateField()),
                ('fecha_nacimiento', models.DateField()),
                ('nomenclatura', models.CharField(blank=True, max_length=45, null=True)),
                ('barrio_vereda', models.CharField(max_length=45)),
                ('correo_electronico', models.CharField(blank=True, max_length=140, null=True)),
                ('telefono_fijo', models.IntegerField(blank=True, max_length=10, null=True)),
                ('celular1', models.CharField(max_length=15)),
                ('celular2', models.CharField(blank=True, max_length=15, null=True)),
                ('deporte_favorito', models.CharField(blank=True, max_length=45, null=True)),
                ('edad', models.IntegerField(blank=True, null=True)),
                ('nombre_completo_recom', models.CharField(blank=True, max_length=100, null=True)),
                ('direccion_recom', models.CharField(blank=True, max_length=45, null=True)),
                ('celular_recom', models.CharField(blank=True, max_length=15, null=True)),
                ('nombre_completo_familiar', models.CharField(blank=True, max_length=45, null=True)),
                ('direccion_familiar', models.CharField(blank=True, max_length=45, null=True)),
                ('celular_familiar', models.CharField(blank=True, max_length=15, null=True)),
                ('email_computadora', models.CharField(max_length=140)),
                ('contrasena_computadora', models.CharField(max_length=45)),
                ('fecha_regis', models.CharField(max_length=45)),
                ('discapacidad', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.discapacidades')),
                ('estado_civil', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.estadosciviles')),
                ('estudios', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.estudios')),
                ('genero', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.tiposgeneros')),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.grupos')),
                ('lugar_expedicion', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.municipios')),
                ('lugar_nacimiento', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='personasnaturales_lugar_nacimiento_set', to='proyecto.municipios')),
                ('ocupacion', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.ocupaciones')),
                ('pais', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.paises')),
                ('tipo_doc', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.tiposdocumentos')),
                ('tipo_vivienda', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.tiposviviendas')),
                ('vive_direccion', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='personasnaturales_vive_direccion_set', to='proyecto.municipios')),
            ],
            options={
                'db_table': 'personas_naturales',
            },
        ),
        migrations.CreateModel(
            name='PersonasJefe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres', models.CharField(max_length=80)),
                ('apellidos', models.CharField(max_length=80)),
                ('fecha_expedicion', models.DateField()),
                ('num_documento', models.IntegerField()),
                ('fecha_nacimiento', models.DateField()),
                ('correo_electronico', models.CharField(blank=True, max_length=140, null=True)),
                ('celular1', models.CharField(max_length=15)),
                ('celular2', models.CharField(blank=True, max_length=15, null=True)),
                ('email_computadora', models.CharField(max_length=140)),
                ('contrasena_computadora', models.CharField(max_length=45)),
                ('discapacidad', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.discapacidades')),
                ('genero', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.tiposgeneros')),
                ('lugar_expedicion', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.municipios')),
                ('tipo_doc', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.tiposdocumentos')),
            ],
            options={
                'db_table': 'personas_jefe',
            },
        ),
        migrations.CreateModel(
            name='PersonasBeneficiarios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beneficiario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.beneficiariospersonasnaturales')),
                ('persona_natural', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.personasnaturales')),
            ],
            options={
                'db_table': 'personas_beneficiarios',
            },
        ),
        migrations.CreateModel(
            name='PersonasAhorrosCreditos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.CharField(max_length=45)),
                ('estado', models.CharField(max_length=45, null=True)),
                ('ahorro', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.ahorros')),
                ('credito', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.creditos')),
                ('grupo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.grupos')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.personasnaturales')),
            ],
            options={
                'db_table': 'personas_ahorros_creditos',
            },
        ),
        migrations.CreateModel(
            name='PersonasAdministrativas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres', models.CharField(max_length=80)),
                ('apellidos', models.CharField(max_length=80)),
                ('fecha_expedicion', models.DateField()),
                ('num_documento', models.IntegerField()),
                ('fecha_nacimiento', models.DateField()),
                ('correo_electronico', models.CharField(blank=True, max_length=140, null=True)),
                ('celular1', models.CharField(max_length=15)),
                ('celular2', models.CharField(blank=True, max_length=15, null=True)),
                ('discapacidad', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.discapacidades')),
                ('genero', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.tiposgeneros')),
                ('jefe', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.personasjefe')),
                ('lugar_expedicion', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.municipios')),
                ('tipo_doc', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.tiposdocumentos')),
            ],
            options={
                'db_table': 'personas_administrativas',
            },
        ),
        migrations.AddField(
            model_name='grupos',
            name='persona_admin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.personasadministrativas'),
        ),
        migrations.AddField(
            model_name='beneficiariospersonasnaturales',
            name='parentesco',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.parentescos'),
        ),
        migrations.AddField(
            model_name='beneficiariospersonasnaturales',
            name='porcentaje',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='proyecto.porcentajes'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('persona_natural', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='proyecto.personasnaturales')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
